---

openapi: 3.0.0
info:
  title: API
  description: laravel-practice
  version: 1.0.0
servers:
  - url: http://localhost
    description: Local
tags:
  - name: comics
    description: 書籍
paths:
  /api/v1/comics:
    get:
      tags:
        - comics
      summary: 書籍一覧 API
      description: 書籍一覧の取得
      parameters:
        - name: key
          in: query
          description: 書籍キー
          example: default-key-1
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: 書籍名
          example: default_name_1
          required: false
          schema:
            type: string
        - name: status[]
          in: query
          description: 書籍ステータス
          example: [published, draft, closed]
          required: false
          schema:
            type: array
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      comics:
                        type: array
                        items:
                          $ref: '#/components/schemas/Comic'
    post:
      tags:
        - comics
      summary: 書籍登録 API
      description: 書籍の登録
      parameters: []
      requestBody:
        description: 書籍情報
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: 書籍キー
                  example: default-key-1
                name:
                  type: string
                  description: 書籍名
                  example: default_name_1
                status:
                  type: string
                  description: 書籍ステータス
                  example: published
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      comic:
                        $ref: '#/components/schemas/Comic'
        '422':
          description: 書籍の重複
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicAlreadyExists'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /api/v1/comics/{comicId}:
    get:
      tags:
        - comics
      summary: 書籍詳細 API
      description: 書籍詳細の取得
      parameters:
        - name: comicId
          in: path
          description: 書籍 ID
          example: 1
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      comic:
                        $ref: '#/components/schemas/Comic'
        '404':
          description: 書籍が存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicNotFound'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      tags:
        - comics
      summary: 書籍更新 API
      description: 書籍の更新
      parameters:
        - name: comicId
          in: path
          description: 書籍 ID
          example: 1
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 書籍情報
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: 書籍キー
                  example: default-key-1
                name:
                  type: string
                  description: 書籍名
                  example: default_name_1
                status:
                  type: string
                  description: 書籍ステータス
                  example: published
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      comic:
                        $ref: '#/components/schemas/Comic'
        '404':
          description: 書籍が存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicNotFound'
        '422':
          description: 書籍の重複
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicAlreadyExists'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - comics
      summary: 書籍削除 API
      description: 書籍の削除
      parameters:
        - name: comicId
          in: path
          description: 書籍 ID
          example: 1
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      comic:
                        $ref: '#/components/schemas/DeletedComic'
        '404':
          description: 書籍が存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicNotFound'
        '422':
          description: 書籍の削除不可
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicCannotBeDeleted'
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
components:
  schemas:
    Comic:
      type: object
      required:
        - id
        - key
        - name
        - status
      properties:
        id:
          type: integer
          format: int64
          description: 書籍 ID
          example: 1
        key:
          type: string
          description: 書籍キー
          example: default-key-1
        name:
          type: string
          description: 書籍名
          example: default_name_1
        status:
          type: object
          properties:
            value:
              type: string
              description: 書籍ステータス 値
              example: published
            description:
              type: string
              description: 書籍ステータス 日本語名
              example: 公開
    DeletedComic:
      type: object
      required:
        - id
        - key
        - name
        - status
      properties:
        id:
          type: integer
          format: int64
          description: 書籍 ID
          example: 1
        key:
          type: string
          description: 書籍キー
          example: default-key-1
        name:
          type: string
          description: 書籍名
          example: default_name_1
        status:
          type: object
          properties:
            value:
              type: string
              description: 書籍ステータス 値
              example: closed
            description:
              type: string
              description: 書籍ステータス 日本語名
              example: 非公開
    ComicNotFound:
      type: object
      properties:
        code:
          type: string
          description: エラーコード
          example: comic-not-found
        message:
          type: string
          description: エラーメッセージ
          example: Comic not found.
        errors:
          type: array
          description: エラー詳細一覧
          example: []
          items:
            type: string
            description: エラー詳細
            example: '画面に表示するエラーメッセージ'
    ComicAlreadyExists:
      type: object
      properties:
        code:
          type: string
          description: エラーコード
          example: comic-already-exists
        message:
          type: string
          description: エラーメッセージ
          example: Comic already exists.
        errors:
          type: array
          description: エラー詳細一覧
          example: []
          items:
            type: string
            description: エラー詳細
            example: 'エラーが発生しました。'
    ComicCannotBeDeleted:
      type: object
      properties:
        code:
          type: string
          description: エラーコード
          example: comic-can-not-be-deleted
        message:
          type: string
          description: エラーメッセージ
          example: Comic cannot be deleted.
        errors:
          type: array
          description: エラー詳細一覧
          example: []
          items:
            type: string
            description: エラー詳細
            example: 'エラーが発生しました。'
    InternalServerError:
      type: object
      properties:
        code:
          type: string
          description: エラーコード
          example: internal-server-error
        message:
          type: string
          description: エラーメッセージ
          example: Internal server error.
        errors:
          type: array
          description: エラー詳細一覧
          example: []
          items:
            type: string
            description: エラー詳細
            example: 'エラーが発生しました。'
